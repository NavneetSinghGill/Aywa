//
//  BrowseWorker.swift
//  aywa
//
//  Created by Bestpeers on 02/01/18.
//  Copyright (c) 2018 Alpha Solutions. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias browserCatelogsSuccessResponseHandler = (_ response:Browse.Catalogs.Response) ->()
typealias browserCatelogsFailureResponseHandler = (_ response:Browse.Catalogs.Response) ->()

class BrowseWorker
{
    func browserCatelogs(request:Browse.Catalogs.Request, success:@escaping(browserCatelogsSuccessResponseHandler), fail:@escaping(browserCatelogsFailureResponseHandler))
    {
        //call network etc.
        let manager = RequestManager()
        manager.fetchCatalogs(request: request.baseRequest()) { (status, response) in
         self.handleCatalogResponse(success: success, fail: fail, status: status, response: response)
        }
        
    }
    // Handle Catalog Response
    func handleCatalogResponse(success:@escaping(browserCatelogsSuccessResponseHandler), fail:@escaping(browserCatelogsFailureResponseHandler) , status: Bool, response: Any?) {
        var message:String = Constants.kErrorMessage
        if status {
            if let result = response as? Browse.Catalogs.Response {
                success(result)
                return
            }
        }
        else {
            if let result = response as? Browse.Catalogs.Response {
                fail(result)
                return
            }
            else
            {
                if let result = response as? String {
                    message = result
                }
            }
        }
        fail(Browse.Catalogs.Response(message: message)!)
    }
    
}
