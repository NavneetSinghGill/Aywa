//
//  BrowseInteractor.swift
//  aywa
//
//  Created by Bestpeers on 02/01/18.
//  Copyright (c) 2018 Alpha Solutions. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BrowseBusinessLogic
{
    func doCatalogs(request: Browse.Catalogs.Request)
    func doSection(request: Home.Section.RequestForBrowseSection) 
}

protocol BrowseDataStore
{
}

class BrowseInteractor: BrowseBusinessLogic, BrowseDataStore
{
    var presenter: BrowsePresentationLogic?
    var worker: BrowseWorker?
    var workerSection: HomeWorker?
    // MARK: Do Browse Interactor
    func doCatalogs(request: Browse.Catalogs.Request)
    {
        worker = BrowseWorker()
        worker?.browserCatelogs(request: request, success: { (response) in
            // print("Catalogs Response:\(response)")
            self.presenter?.presentScreenData(response: response)
            
        }, fail: { (response) in
            self.presenter?.presentError(response: response)
        })
    }
    // MARK: Do Browse Section
    func doSection(request: Home.Section.RequestForBrowseSection) {
        workerSection = HomeWorker()
        workerSection?.homeBrowseSection(request: request, success: { (response) in
            print(response)
            self.presenter?.presentForSectionScreenData(response: response)
        }, fail: { (response) in
            self.presenter?.presentForSectionError(response: response)
        })
    }
}

