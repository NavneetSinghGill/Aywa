//
//  BrowseRouter.swift
//  aywa
//
//  Created by Bestpeers on 02/01/18.
//  Copyright (c) 2018 Alpha Solutions. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol BrowseRoutingLogic
{
    func selectedRowAtIndex(selectedIndex: Int, title: String )
}

protocol BrowseDataPassing
{
    var dataStore: BrowseDataStore? { get }
}

class BrowseRouter: NSObject, BrowseRoutingLogic, BrowseDataPassing
{
    weak var viewController: BrowseViewController?
    var dataStore: BrowseDataStore?
    
    // MARK: Routing
    
    func selectedRowAtIndex(selectedIndex: Int, title: String ) {
        var destinationVC = UIViewController()
        print(title)
        
        switch title {
        case LocaleKeys.kMoviesString:
            destinationVC = MoviesViewController.create(of: .UniversalStoryboard)
        case LocaleKeys.kTvShowsString:
            destinationVC = TVShowsViewController.create(of: .UniversalStoryboard)
        case LocaleKeys.kNetworksString:
            destinationVC = NetworksViewController.create(of: .UniversalStoryboard)
        case LocaleKeys.kDocumentariesString, LocaleKeys.kKidString, LocaleKeys.kNewReleasesString, LocaleKeys.kRecently_AddedString:
            destinationVC = HomeViewController.create(of: .UniversalStoryboard)
            passDataToHomeCatalogId(source: viewController!, destination: destinationVC as! HomeViewController, selectedRowTitle: title)
        case LocaleKeys.kGenresString:
            print("Genres")
        default:
            print(title)
        }
        navigateToSomewhere(source: viewController!, destination: destinationVC)
    }
    
    // MARK: Navigation
    func navigateToSomewhere(source: BrowseViewController, destination: UIViewController){
        source.bpPush(viewController: destination)
    }
    
    // MARK: Passing data
    // For Home Section for Catalogs
    func passDataToHomeCatalogId(source: BrowseViewController, destination: HomeViewController, selectedRowTitle: String){
        print(selectedRowTitle)
        switch selectedRowTitle {
        case LocaleKeys.kNewReleasesString , LocaleKeys.kRecently_AddedString:
            destination.sectionString = selectedRowTitle
        case LocaleKeys.kDocumentariesString, LocaleKeys.kKidString:
            let selectedRow: Int = (viewController?.tableView.indexPathForSelectedRow?.row)!
            let arrayCatalogsIs = viewController?.browseCatalogsArray
            let catalogIdIs: Int = (arrayCatalogsIs?.catalogs![selectedRow].id!)!
            print(catalogIdIs)
            destination.catalogIdForHomeSection = catalogIdIs
        default:
            print(selectedRowTitle)
        }
    }
}
