//
//  LandingWorker.swift
//  aywa
//
//  Created by Zoeb on 11/12/17.
//  Copyright (c) 2017 Alpha Solutions. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias accessTokenResponseHandler = (_ response:Landing.JWTToken.Response) ->()

typealias refreshTokenResponseHandler = (_ response:Landing.RefreshToken.Response) ->()

class LandingWorker
{
    func fetchJWTToken(request:Landing.JWTToken.Request, success:@escaping(accessTokenResponseHandler), fail:@escaping(accessTokenResponseHandler))
    {
        //call network etc.
        let manager = RequestManager()
        
        manager.fetchJWTToken(request: request.baseRequest()) { (status, response) in
            var message:String = Constants.kErrorMessage
            if status {
                if let result = response as? Landing.JWTToken.Response {
                    success(result)
                    return
                }
            }
            else {
                if let result = response as? Landing.JWTToken.Response {
                    fail(result)
                    return
                }
                else
                {
                    if let result = response as? String {
                        message = result
                    }
                }
            }
            fail(Landing.JWTToken.Response(message:message)!)
        }
    }
    
    func fetchRefreshToken(refreshToken:String, success:@escaping(refreshTokenResponseHandler), fail:@escaping(refreshTokenResponseHandler))
    {
        //call network etc.
        let manager = RequestManager()
        
        manager.fetchRefreshToken(request: Landing.RefreshToken.Request().baseRequest(refreshToken: refreshToken)) { (status, response) in
            var message:String = Constants.kErrorMessage
            if status {
                if let result = response as? Landing.RefreshToken.Response {
                    success(result)
                    return
                }
            }
            else {
                if let result = response as? Landing.RefreshToken.Response {
                    fail(result)
                    return
                }
                else
                {
                    if let result = response as? String {
                        message = result
                    }
                }
            }
            fail(Landing.RefreshToken.Response(message:message)!)
        }
    }
}
