//
//  TVShowsWorker.swift
//  aywa
//
//  Created by Bestpeers on 09/01/18.
//  Copyright (c) 2018 Alpha Solutions. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias tvShowsSuccessResponseHandler = (_ response: [TVShows.MyListShows.Response]) ->()
typealias tvShowsFailureResponseHandler = (_ response: TVShows.MyListShows.Response) ->()

class TVShowsWorker
{
    func doTVShowsWork(request:TVShows.MyListShows.Request, success:@escaping(tvShowsSuccessResponseHandler), fail:@escaping(tvShowsFailureResponseHandler))
    {
        //call network for movies etc.
        let manager = RequestManager()
        manager.fetchShows(request: request.baseRequest()) { (status, response) in
            self.handleTVShowsResponse(success: success, fail: fail, status: status, response: response)
        }
    }
    
    // Handle TVShows Response
    
    func handleTVShowsResponse(success:@escaping(tvShowsSuccessResponseHandler), fail:@escaping(tvShowsFailureResponseHandler), status: Bool, response: Any?) {
        var message:String = Constants.kErrorMessage
        if status {
            if let result = response as? [TVShows.MyListShows.Response] {
                success(result)
                return
            }
        }
        else {
            if let result = response as? TVShows.MyListShows.Response {
                fail(result)
                return
            }
            else
            {
                if let result = response as? String {
                    message = result
                }
            }
        }
        fail(TVShows.MyListShows.Response(message: message)!)
    }
}

